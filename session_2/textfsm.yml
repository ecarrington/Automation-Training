# works a bit different than ios_facts. Here, we take some standard output and parse it into a data model

---
- name: PLAY 1 - Gather Interface Statistics with TextFSM templates
  hosts: all
  connection: network_cli

  tasks:
    - name: Run show command
      ios_command: # runs a 'show' command
        commands: "show interfaces switchport"
      register: cli_output

    - name: Parse show command output
      set_fact:
        parsed_interfaces: "{{ cli_output.stdout[0] | parse_cli_textfsm('/home/adam/ntc-templates/templates/cisco_ios_show_interfaces_switchport.textfsm') }}"


#    - name: Save parsed output to file
#      copy:
#        content: "{{ parsed_interfaces | to_nice_yaml }}" # convert to yaml format automatically
#        dest: "./documentation/textfsm/{{ inventory_hostname }}.yml"

    - name: Create list of access interfaces
      set_fact:
        access_interfaces: "{{ access_interfaces | default([]) + [item.INTERFACE]  }}"
      with_items: "{{ parsed_interfaces }}"
      when: item.MODE == 'static access'

    - name: List access interfaces
      debug:
        msg: "{{ access_interfaces }}"


    - name: Create list of trunk interfaces
      set_fact:
        trunk_interfaces: "{{ trunk_interfaces | default([]) + [item.INTERFACE]  }}"
      with_items: "{{ parsed_interfaces }}"
      when: item.MODE == 'trunk'

    - name: List trunk interfaces
      debug:
        msg: "{{ trunk_interfaces }}"


...
